<?php

Class Token {
   Private $token;
   
   Public Function __construct ( ) {
     $this->token = $this->generate_token (256);
   }

   /* enables a different value to be used for
     a token other than the random generated one
   */
   Public function set_token ($token) {
      $this->token = $token;
   } 

/* retrieve the token generated by
this class, or null if token has
been deleted
*/
Public function get_token ( ) {
return $this->token;
}


/* delete the token */
Public function delete_token ( ) {
$this->token = NULL;
}

Public function is_token_valid ($token) {
return (trim ($token) === trim ($this->token));
}
/*
Generates a random
string with numbers, special
characters, and letters
@param $token_length length of
string to generate
*/

Private function generate_token ($token_length ) {
$txt = "";
/* divide by 2 as 2 characters generated per iteration */
$length = $token_length / 2;

For ( $i=0; $i < $length; $i++) {
$txt .= chr (mt_rand (33, 94));
$txt .= chr (mt_rand (97, 126));
}

return $txt;

}



} // end token class





?>